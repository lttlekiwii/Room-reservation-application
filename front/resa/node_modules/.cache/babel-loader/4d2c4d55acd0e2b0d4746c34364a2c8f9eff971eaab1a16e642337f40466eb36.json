{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f.tomczyk\\\\Documents\\\\Cours\\\\Benzidane\\\\new\\\\front\\\\resa\\\\src\\\\Pages\\\\accueil.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accueil = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    user: '',\n    room: '',\n    time: '',\n    subject: ''\n  });\n  const calendarRef = useRef(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/create_reservation/', formData);\n      console.log('Réservation créée avec succès !');\n      // Mettre à jour le calendrier en rechargeant les données\n      if (calendarRef.current) {\n        calendarRef.current.getApi().refetchEvents();\n      }\n    } catch (error) {\n      console.error('Erreur lors de la création de la réservation :', error);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accueil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user\",\n        value: formData.user,\n        onChange: handleChange,\n        placeholder: \"Id de l'utilisateur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"room\",\n        value: formData.room,\n        onChange: handleChange,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time\",\n        value: formData.time,\n        onChange: handleChange,\n        placeholder: \"Heure de d\\xE9but\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time\",\n        value: formData.time,\n        onChange: handleChange,\n        placeholder: \"Heure de fin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: formData.subject,\n        onChange: handleChange,\n        placeholder: \"Sujet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"R\\xE9server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: fetchEvents // Fonction pour récupérer les événements du calendrier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n// Fonction pour récupérer les événements du calendrier\n_s(Accueil, \"qTBZN5LYGknlOBgFtpTlATlJyMc=\");\n_c = Accueil;\nconst fetchEvents = async (fetchInfo, successCallback) => {\n  try {\n    const response = await axios.get('http://localhost:8000/get_reservations/');\n    const reservations = response.data;\n    const events = reservations.map(reservation => ({\n      id: reservation.id,\n      title: reservation.subject,\n      start: reservation.time,\n      end: reservation.endTime,\n      // Ajout de la propriété end\n      allDay: false // Mettre à false si les réservations sont pour des heures spécifiques\n    }));\n    successCallback(events);\n  } catch (error) {\n    console.error('Erreur lors de la récupération des réservations :', error);\n  }\n};\nexport default Accueil;\nvar _c;\n$RefreshReg$(_c, \"Accueil\");","map":{"version":3,"names":["axios","React","useState","useRef","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","Accueil","_s","formData","setFormData","user","room","time","subject","calendarRef","handleSubmit","event","preventDefault","post","console","log","current","getApi","refetchEvents","error","handleChange","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","ref","plugins","initialView","events","fetchEvents","_c","fetchInfo","successCallback","response","get","reservations","data","map","reservation","id","title","start","end","endTime","allDay","$RefreshReg$"],"sources":["C:/Users/f.tomczyk/Documents/Cours/Benzidane/new/front/resa/src/Pages/accueil.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\n\r\nconst Accueil = () => {\r\n    const [formData, setFormData] = useState({\r\n        user: '',\r\n        room: '',\r\n        time: '',\r\n        subject: ''\r\n    });\r\n\r\n    const calendarRef = useRef(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8000/create_reservation/', formData);\r\n            console.log('Réservation créée avec succès !');\r\n            // Mettre à jour le calendrier en rechargeant les données\r\n            if (calendarRef.current) {\r\n                calendarRef.current.getApi().refetchEvents();\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de la création de la réservation :', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Accueil</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"user\" value={formData.user} onChange={handleChange} placeholder=\"Id de l'utilisateur\" />\r\n                <input type=\"text\" name=\"room\" value={formData.room} onChange={handleChange} placeholder=\"\" />\r\n                <input type=\"text\" name=\"time\" value={formData.time} onChange={handleChange} placeholder=\"Heure de début\" />\r\n                <input type=\"text\" name=\"time\" value={formData.time} onChange={handleChange} placeholder=\"Heure de fin\" />\r\n                <input type=\"text\" name=\"subject\" value={formData.subject} onChange={handleChange} placeholder=\"Sujet\" />\r\n                <button type=\"submit\">Réserver</button>\r\n            </form>\r\n\r\n            <div>\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    plugins={[dayGridPlugin]}\r\n                    initialView=\"dayGridMonth\"\r\n                    events={fetchEvents} // Fonction pour récupérer les événements du calendrier\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Fonction pour récupérer les événements du calendrier\r\nconst fetchEvents = async (fetchInfo, successCallback) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:8000/get_reservations/');\r\n        const reservations = response.data;\r\n        const events = reservations.map((reservation) => ({\r\n            id: reservation.id,\r\n            title: reservation.subject,\r\n            start: reservation.time,\r\n            end: reservation.endTime, // Ajout de la propriété end\r\n            allDay: false // Mettre à false si les réservations sont pour des heures spécifiques\r\n        }));\r\n        successCallback(events);\r\n    } catch (error) {\r\n        console.error('Erreur lors de la récupération des réservations :', error);\r\n    }\r\n};\r\n\r\nexport default Accueil;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMnB,KAAK,CAACoB,IAAI,CAAC,2CAA2C,EAAEV,QAAQ,CAAC;MACvEW,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C;MACA,IAAIN,WAAW,CAACO,OAAO,EAAE;QACrBP,WAAW,CAACO,OAAO,CAACC,MAAM,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC;MAChD;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IAC1E;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIT,KAAK,IAAK;IAC5B,MAAM;MAAEU,IAAI;MAAEC;IAAM,CAAC,GAAGX,KAAK,CAACY,MAAM;IACpCnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACkB,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB5B,OAAA;MAAM6B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBACzBxB,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACT,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,QAAQ,CAACE,IAAK;QAAC0B,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAqB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjH5B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACT,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,QAAQ,CAACG,IAAK;QAACyB,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9F5B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACT,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,QAAQ,CAACI,IAAK;QAACwB,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAgB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5G5B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACT,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,QAAQ,CAACI,IAAK;QAACwB,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1G5B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACT,IAAI,EAAC,SAAS;QAACC,KAAK,EAAEnB,QAAQ,CAACK,OAAQ;QAACuB,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzG5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAEP5B,OAAA;MAAAwB,QAAA,eACIxB,OAAA,CAACH,YAAY;QACToC,GAAG,EAAExB,WAAY;QACjByB,OAAO,EAAE,CAACpC,aAAa,CAAE;QACzBqC,WAAW,EAAC,cAAc;QAC1BC,MAAM,EAAEC,WAAY,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAA1B,EAAA,CArDMD,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAsDb,MAAMoC,WAAW,GAAG,MAAAA,CAAOE,SAAS,EAAEC,eAAe,KAAK;EACtD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,GAAG,CAAC,yCAAyC,CAAC;IAC3E,MAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAI;IAClC,MAAMR,MAAM,GAAGO,YAAY,CAACE,GAAG,CAAEC,WAAW,KAAM;MAC9CC,EAAE,EAAED,WAAW,CAACC,EAAE;MAClBC,KAAK,EAAEF,WAAW,CAACtC,OAAO;MAC1ByC,KAAK,EAAEH,WAAW,CAACvC,IAAI;MACvB2C,GAAG,EAAEJ,WAAW,CAACK,OAAO;MAAE;MAC1BC,MAAM,EAAE,KAAK,CAAC;IAClB,CAAC,CAAC,CAAC;IACHZ,eAAe,CAACJ,MAAM,CAAC;EAC3B,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;EAC7E;AACJ,CAAC;AAED,eAAelB,OAAO;AAAC,IAAAqC,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}